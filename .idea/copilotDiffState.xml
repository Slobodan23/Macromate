<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CopilotDiffPersistence">
    <option name="pendingDiffs">
      <map>
        <entry key="$PROJECT_DIR$/app/src/main/java/com/example/macromate/editActivity/AddObrokActivity.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/java/com/example/macromate/editActivity/AddObrokActivity.java" />
              <option name="originalContent" value="package com.example.macromate.editActivity;&#10;&#10;import android.content.Intent;&#10;import android.os.Bundle;&#10;import android.text.Editable;&#10;import android.text.TextWatcher;&#10;import android.view.View;&#10;import android.widget.AdapterView;&#10;import android.widget.ArrayAdapter;&#10;import android.widget.Button;&#10;import android.widget.Spinner;&#10;import android.widget.TextView;&#10;import android.widget.Toast;&#10;&#10;import androidx.activity.EdgeToEdge;&#10;import androidx.appcompat.app.AppCompatActivity;&#10;import androidx.core.graphics.Insets;&#10;import androidx.core.view.ViewCompat;&#10;import androidx.core.view.WindowInsetsCompat;&#10;&#10;import com.example.macromate.R;&#10;import com.example.macromate.baza.Database;&#10;import com.example.macromate.model.Obrok;&#10;import com.example.macromate.model.ObrokSaKolicinom;&#10;import com.example.macromate.model.ObrociDan;&#10;import com.google.android.material.textfield.TextInputEditText;&#10;&#10;import java.util.ArrayList;&#10;import java.util.Date;&#10;import java.util.List;&#10;&#10;public class AddObrokActivity extends AppCompatActivity {&#10;&#10;    private Spinner spinnerMeals, spinnerMealCategory;&#10;    private TextInputEditText editTextQuantity;&#10;    private TextView textViewCaloriesPreview, textViewProteinPreview, textViewCarbsPreview, textViewFatPreview;&#10;    private Button buttonAddMeal, buttonCancel, buttonCreateMeal;&#10;    private Database database;&#10;    private List&lt;Obrok&gt; availableMeals;&#10;    private Obrok selectedMeal;&#10;    private String[] mealCategories = {&quot;Breakfast&quot;, &quot;Lunch&quot;, &quot;Dinner&quot;, &quot;Snacks&quot;};&#10;&#10;    @Override&#10;    protected void onCreate(Bundle savedInstanceState) {&#10;        super.onCreate(savedInstanceState);&#10;        EdgeToEdge.enable(this);&#10;        setContentView(R.layout.activity_add_obrok);&#10;        ViewCompat.setOnApplyWindowInsetsListener(findViewById(R.id.main), (v, insets) -&gt; {&#10;            Insets systemBars = insets.getInsets(WindowInsetsCompat.Type.systemBars());&#10;            v.setPadding(systemBars.left, systemBars.top, systemBars.right, systemBars.bottom);&#10;            return insets;&#10;        });&#10;&#10;        initializeViews();&#10;        database = Database.getInstance(this);&#10;        setupSpinners();&#10;        setupClickListeners();&#10;        setupQuantityListener();&#10;        loadMeals();&#10;    }&#10;&#10;    private void initializeViews() {&#10;        spinnerMeals = findViewById(R.id.spinnerMeals);&#10;        spinnerMealCategory = findViewById(R.id.spinnerMealCategory);&#10;        editTextQuantity = findViewById(R.id.editTextQuantity);&#10;        textViewCaloriesPreview = findViewById(R.id.textViewCaloriesPreview);&#10;        textViewProteinPreview = findViewById(R.id.textViewProteinPreview);&#10;        textViewCarbsPreview = findViewById(R.id.textViewCarbsPreview);&#10;        textViewFatPreview = findViewById(R.id.textViewFatPreview);&#10;        buttonAddMeal = findViewById(R.id.buttonAddMeal);&#10;        buttonCancel = findViewById(R.id.buttonCancel);&#10;        buttonCreateMeal = findViewById(R.id.buttonCreateMeal);&#10;    }&#10;&#10;    private void setupSpinners() {&#10;        ArrayAdapter&lt;String&gt; categoryAdapter = new ArrayAdapter&lt;&gt;(this, android.R.layout.simple_spinner_item, mealCategories);&#10;        categoryAdapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);&#10;        spinnerMealCategory.setAdapter(categoryAdapter);&#10;&#10;        spinnerMeals.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {&#10;            @Override&#10;            public void onItemSelected(AdapterView&lt;?&gt; parent, View view, int position, long id) {&#10;                if (position &gt; 0 &amp;&amp; availableMeals != null &amp;&amp; position &lt;= availableMeals.size()) {&#10;                    selectedMeal = availableMeals.get(position - 1);&#10;                    updateNutritionalPreview();&#10;                } else {&#10;                    selectedMeal = null;&#10;                    updateNutritionalPreview();&#10;                }&#10;            }&#10;&#10;            @Override&#10;            public void onNothingSelected(AdapterView&lt;?&gt; parent) {&#10;                selectedMeal = null;&#10;                updateNutritionalPreview();&#10;            }&#10;        });&#10;    }&#10;&#10;    private void setupClickListeners() {&#10;        buttonAddMeal.setOnClickListener(v -&gt; addMealToDay());&#10;        buttonCancel.setOnClickListener(v -&gt; finish());&#10;        buttonCreateMeal.setOnClickListener(v -&gt; {&#10;            Intent intent = new Intent(this, CreateObrokActivity.class);&#10;            startActivity(intent);&#10;        });&#10;    }&#10;&#10;    private void setupQuantityListener() {&#10;        editTextQuantity.addTextChangedListener(new TextWatcher() {&#10;            @Override&#10;            public void beforeTextChanged(CharSequence s, int start, int count, int after) {}&#10;&#10;            @Override&#10;            public void onTextChanged(CharSequence s, int start, int before, int count) {&#10;                updateNutritionalPreview();&#10;            }&#10;&#10;            @Override&#10;            public void afterTextChanged(Editable s) {}&#10;        });&#10;    }&#10;&#10;    private void loadMeals() {&#10;        List&lt;Obrok&gt; allObroci = database.getAllObroci();&#10;        availableMeals = new ArrayList&lt;&gt;();&#10;&#10;        // Filter out meals that have quantity info in their names (contain parentheses with 'g')&#10;        for (Obrok obrok : allObroci) {&#10;            String mealName = obrok.getIme();&#10;            // Only include meals that don't have quantity info like &quot;(100g)&quot; or &quot;(500g)&quot;&#10;            if (!mealName.matches(&quot;.*\\(\\d+(\\.\\d+)?g\\).*&quot;)) {&#10;                availableMeals.add(obrok);&#10;            }&#10;        }&#10;&#10;        List&lt;String&gt; mealNames = new ArrayList&lt;&gt;();&#10;        mealNames.add(&quot;Select a meal...&quot;);&#10;&#10;        for (Obrok obrok : availableMeals) {&#10;            mealNames.add(obrok.getIme());&#10;        }&#10;&#10;        ArrayAdapter&lt;String&gt; mealsAdapter = new ArrayAdapter&lt;&gt;(this, android.R.layout.simple_spinner_item, mealNames);&#10;        mealsAdapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);&#10;        spinnerMeals.setAdapter(mealsAdapter);&#10;    }&#10;&#10;    private void updateNutritionalPreview() {&#10;        if (selectedMeal == null) {&#10;            textViewCaloriesPreview.setText(&quot;Calories: 0 kcal&quot;);&#10;            textViewProteinPreview.setText(&quot;Protein: 0 g&quot;);&#10;            textViewCarbsPreview.setText(&quot;Carbohydrates: 0 g&quot;);&#10;            textViewFatPreview.setText(&quot;Fat: 0 g&quot;);&#10;            return;&#10;        }&#10;&#10;        float quantity = 1.0f;&#10;        try {&#10;            String quantityStr = editTextQuantity.getText().toString().trim();&#10;            if (!quantityStr.isEmpty()) {&#10;                quantity = Float.parseFloat(quantityStr);&#10;            }&#10;        } catch (NumberFormatException e) {&#10;            quantity = 1.0f;&#10;        }&#10;&#10;        ObrokSaKolicinom obrokSaKolicinom = new ObrokSaKolicinom(selectedMeal, quantity);&#10;&#10;        textViewCaloriesPreview.setText(String.format(&quot;Calories: %.1f kcal&quot;, obrokSaKolicinom.getCalculatedKcal()));&#10;        textViewProteinPreview.setText(String.format(&quot;Protein: %.1f g&quot;, obrokSaKolicinom.getCalculatedProtein()));&#10;        textViewCarbsPreview.setText(String.format(&quot;Carbohydrates: %.1f g&quot;, obrokSaKolicinom.getCalculatedCarb()));&#10;        textViewFatPreview.setText(String.format(&quot;Fat: %.1f g&quot;, obrokSaKolicinom.getCalculatedFat()));&#10;    }&#10;&#10;    private void addMealToDay() {&#10;        if (selectedMeal == null) {&#10;            Toast.makeText(this, &quot;Please select a meal&quot;, Toast.LENGTH_SHORT).show();&#10;            return;&#10;        }&#10;&#10;        float quantity;&#10;        try {&#10;            String quantityStr = editTextQuantity.getText().toString().trim();&#10;            if (quantityStr.isEmpty()) {&#10;                quantity = 1.0f;&#10;            } else {&#10;                quantity = Float.parseFloat(quantityStr);&#10;            }&#10;&#10;            if (quantity &lt;= 0) {&#10;                Toast.makeText(this, &quot;Quantity must be greater than 0&quot;, Toast.LENGTH_SHORT).show();&#10;                return;&#10;            }&#10;        } catch (NumberFormatException e) {&#10;            Toast.makeText(this, &quot;Please enter a valid quantity&quot;, Toast.LENGTH_SHORT).show();&#10;            return;&#10;        }&#10;&#10;        Obrok scaledObrok = new Obrok(&#10;                null,&#10;                selectedMeal.getIme() + &quot; (&quot; + (quantity * 100) + &quot;g)&quot;,&#10;                selectedMeal.getKcal() * quantity,&#10;                selectedMeal.getFat() * quantity,&#10;                selectedMeal.getCarb() * quantity,&#10;                selectedMeal.getProtein() * quantity&#10;        );&#10;&#10;        String selectedCategory = mealCategories[spinnerMealCategory.getSelectedItemPosition()];&#10;&#10;        addToTodaysMeals(scaledObrok, selectedCategory);&#10;&#10;        Toast.makeText(this, &quot;Meal added to &quot; + selectedCategory.toLowerCase() + &quot;!&quot;, Toast.LENGTH_SHORT).show();&#10;        finish();&#10;    }&#10;&#10;    private void addToTodaysMeals(Obrok obrok, String category) {&#10;        long obrokId = database.addObrok(obrok.getIme(), obrok.getKcal(), obrok.getFat(), obrok.getCarb(), obrok.getProtein());&#10;        obrok.setId(obrokId);&#10;&#10;        Date targetDate = new Date();&#10;        Intent intent = getIntent();&#10;        if (intent != null &amp;&amp; intent.hasExtra(&quot;SELECTED_DATE&quot;)) {&#10;            long dateMillis = intent.getLongExtra(&quot;SELECTED_DATE&quot;, System.currentTimeMillis());&#10;            targetDate = new Date(dateMillis);&#10;        }&#10;&#10;        ObrociDan obrociDan = database.getObrociDanByDate(targetDate);&#10;&#10;        if (obrociDan == null) {&#10;            List&lt;Obrok&gt; dorucak = new ArrayList&lt;&gt;();&#10;            List&lt;Obrok&gt; rucak = new ArrayList&lt;&gt;();&#10;            List&lt;Obrok&gt; vecera = new ArrayList&lt;&gt;();&#10;            List&lt;Obrok&gt; uzina = new ArrayList&lt;&gt;();&#10;&#10;            switch (category) {&#10;                case &quot;Breakfast&quot;:&#10;                    dorucak.add(obrok);&#10;                    break;&#10;                case &quot;Lunch&quot;:&#10;                    rucak.add(obrok);&#10;                    break;&#10;                case &quot;Dinner&quot;:&#10;                    vecera.add(obrok);&#10;                    break;&#10;                case &quot;Snacks&quot;:&#10;                    uzina.add(obrok);&#10;                    break;&#10;            }&#10;&#10;            database.addObrociDan(dorucak, rucak, vecera, uzina, targetDate);&#10;        } else {&#10;            List&lt;Obrok&gt; dorucak = obrociDan.getDorucak() != null ? new ArrayList&lt;&gt;(obrociDan.getDorucak()) : new ArrayList&lt;&gt;();&#10;            List&lt;Obrok&gt; rucak = obrociDan.getRucak() != null ? new ArrayList&lt;&gt;(obrociDan.getRucak()) : new ArrayList&lt;&gt;();&#10;            List&lt;Obrok&gt; vecera = obrociDan.getVecera() != null ? new ArrayList&lt;&gt;(obrociDan.getVecera()) : new ArrayList&lt;&gt;();&#10;            List&lt;Obrok&gt; uzina = obrociDan.getUzina() != null ? new ArrayList&lt;&gt;(obrociDan.getUzina()) : new ArrayList&lt;&gt;();&#10;&#10;            switch (category) {&#10;                case &quot;Breakfast&quot;:&#10;                    dorucak.add(obrok);&#10;                    break;&#10;                case &quot;Lunch&quot;:&#10;                    rucak.add(obrok);&#10;                    break;&#10;                case &quot;Dinner&quot;:&#10;                    vecera.add(obrok);&#10;                    break;&#10;                case &quot;Snacks&quot;:&#10;                    uzina.add(obrok);&#10;                    break;&#10;            }&#10;&#10;            database.editObrociDan(obrociDan.getId(), dorucak, rucak, vecera, uzina, targetDate);&#10;        }&#10;    }&#10;&#10;    @Override&#10;    protected void onResume() {&#10;        super.onResume();&#10;        loadMeals();&#10;    }&#10;}" />
              <option name="updatedContent" value="package com.example.macromate.editActivity;&#10;&#10;import android.content.Intent;&#10;import android.os.Bundle;&#10;import android.text.Editable;&#10;import android.text.TextWatcher;&#10;import android.view.View;&#10;import android.widget.AdapterView;&#10;import android.widget.ArrayAdapter;&#10;import android.widget.Button;&#10;import android.widget.Spinner;&#10;import android.widget.TextView;&#10;import android.widget.Toast;&#10;&#10;import androidx.activity.EdgeToEdge;&#10;import androidx.appcompat.app.AppCompatActivity;&#10;import androidx.core.graphics.Insets;&#10;import androidx.core.view.ViewCompat;&#10;import androidx.core.view.WindowInsetsCompat;&#10;&#10;import com.example.macromate.R;&#10;import com.example.macromate.baza.Database;&#10;import com.example.macromate.model.Obrok;&#10;import com.example.macromate.model.ObrokSaKolicinom;&#10;import com.example.macromate.model.ObrociDan;&#10;import com.google.android.material.textfield.TextInputEditText;&#10;&#10;import java.util.ArrayList;&#10;import java.util.Date;&#10;import java.util.List;&#10;&#10;public class AddObrokActivity extends AppCompatActivity {&#10;&#10;    private Spinner spinnerMeals, spinnerMealCategory;&#10;    private TextInputEditText editTextQuantity;&#10;    private TextView textViewCaloriesPreview, textViewProteinPreview, textViewCarbsPreview, textViewFatPreview;&#10;    private Button buttonAddMeal, buttonCancel, buttonCreateMeal;&#10;    private Database database;&#10;    private List&lt;Obrok&gt; availableMeals;&#10;    private Obrok selectedMeal;&#10;    private String[] mealCategories = {&quot;Breakfast&quot;, &quot;Lunch&quot;, &quot;Dinner&quot;, &quot;Snacks&quot;};&#10;&#10;    @Override&#10;    protected void onCreate(Bundle savedInstanceState) {&#10;        super.onCreate(savedInstanceState);&#10;        EdgeToEdge.enable(this);&#10;        setContentView(R.layout.activity_add_obrok);&#10;        ViewCompat.setOnApplyWindowInsetsListener(findViewById(R.id.main), (v, insets) -&gt; {&#10;            Insets systemBars = insets.getInsets(WindowInsetsCompat.Type.systemBars());&#10;            v.setPadding(systemBars.left, systemBars.top, systemBars.right, systemBars.bottom);&#10;            return insets;&#10;        });&#10;&#10;        initializeViews();&#10;        database = Database.getInstance(this);&#10;        setupSpinners();&#10;        setupClickListeners();&#10;        setupQuantityListener();&#10;        loadMeals();&#10;    }&#10;&#10;    private void initializeViews() {&#10;        spinnerMeals = findViewById(R.id.spinnerMeals);&#10;        spinnerMealCategory = findViewById(R.id.spinnerMealCategory);&#10;        editTextQuantity = findViewById(R.id.editTextQuantity);&#10;        textViewCaloriesPreview = findViewById(R.id.textViewCaloriesPreview);&#10;        textViewProteinPreview = findViewById(R.id.textViewProteinPreview);&#10;        textViewCarbsPreview = findViewById(R.id.textViewCarbsPreview);&#10;        textViewFatPreview = findViewById(R.id.textViewFatPreview);&#10;        buttonAddMeal = findViewById(R.id.buttonAddMeal);&#10;        buttonCancel = findViewById(R.id.buttonCancel);&#10;        buttonCreateMeal = findViewById(R.id.buttonCreateMeal);&#10;    }&#10;&#10;    private void setupSpinners() {&#10;        ArrayAdapter&lt;String&gt; categoryAdapter = new ArrayAdapter&lt;&gt;(this, android.R.layout.simple_spinner_item, mealCategories);&#10;        categoryAdapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);&#10;        spinnerMealCategory.setAdapter(categoryAdapter);&#10;&#10;        spinnerMeals.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {&#10;            @Override&#10;            public void onItemSelected(AdapterView&lt;?&gt; parent, View view, int position, long id) {&#10;                if (position &gt; 0 &amp;&amp; availableMeals != null &amp;&amp; position &lt;= availableMeals.size()) {&#10;                    selectedMeal = availableMeals.get(position - 1);&#10;                    updateNutritionalPreview();&#10;                } else {&#10;                    selectedMeal = null;&#10;                    updateNutritionalPreview();&#10;                }&#10;            }&#10;&#10;            @Override&#10;            public void onNothingSelected(AdapterView&lt;?&gt; parent) {&#10;                selectedMeal = null;&#10;                updateNutritionalPreview();&#10;            }&#10;        });&#10;    }&#10;&#10;    private void setupClickListeners() {&#10;        buttonAddMeal.setOnClickListener(v -&gt; addMealToDay());&#10;        buttonCancel.setOnClickListener(v -&gt; finish());&#10;        buttonCreateMeal.setOnClickListener(v -&gt; {&#10;            Intent intent = new Intent(this, CreateObrokActivity.class);&#10;            startActivity(intent);&#10;        });&#10;    }&#10;&#10;    private void setupQuantityListener() {&#10;        editTextQuantity.addTextChangedListener(new TextWatcher() {&#10;            @Override&#10;            public void beforeTextChanged(CharSequence s, int start, int count, int after) {}&#10;&#10;            @Override&#10;            public void onTextChanged(CharSequence s, int start, int before, int count) {&#10;                updateNutritionalPreview();&#10;            }&#10;&#10;            @Override&#10;            public void afterTextChanged(Editable s) {}&#10;        });&#10;    }&#10;&#10;    private void loadMeals() {&#10;        List&lt;Obrok&gt; allObroci = database.getAllObroci();&#10;        availableMeals = new ArrayList&lt;&gt;();&#10;&#10;        // Filter out meals that have quantity info in their names (contain parentheses with 'g')&#10;        for (Obrok obrok : allObroci) {&#10;            String mealName = obrok.getIme();&#10;            // Only include meals that don't have quantity info like &quot;(100g)&quot; or &quot;(500g)&quot;&#10;            if (!mealName.matches(&quot;.*\\(\\d+(\\.\\d+)?g\\).*&quot;)) {&#10;                availableMeals.add(obrok);&#10;            }&#10;        }&#10;&#10;        List&lt;String&gt; mealNames = new ArrayList&lt;&gt;();&#10;        mealNames.add(&quot;Select a meal...&quot;);&#10;&#10;        for (Obrok obrok : availableMeals) {&#10;            mealNames.add(obrok.getIme());&#10;        }&#10;&#10;        ArrayAdapter&lt;String&gt; mealsAdapter = new ArrayAdapter&lt;&gt;(this, android.R.layout.simple_spinner_item, mealNames);&#10;        mealsAdapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);&#10;        spinnerMeals.setAdapter(mealsAdapter);&#10;    }&#10;&#10;    private void updateNutritionalPreview() {&#10;        if (selectedMeal == null) {&#10;            textViewCaloriesPreview.setText(&quot;Calories: 0 kcal&quot;);&#10;            textViewProteinPreview.setText(&quot;Protein: 0 g&quot;);&#10;            textViewCarbsPreview.setText(&quot;Carbohydrates: 0 g&quot;);&#10;            textViewFatPreview.setText(&quot;Fat: 0 g&quot;);&#10;            return;&#10;        }&#10;&#10;        float quantity = 1.0f;&#10;        try {&#10;            String quantityStr = editTextQuantity.getText().toString().trim();&#10;            if (!quantityStr.isEmpty()) {&#10;                quantity = Float.parseFloat(quantityStr);&#10;            }&#10;        } catch (NumberFormatException e) {&#10;            quantity = 1.0f;&#10;        }&#10;&#10;        ObrokSaKolicinom obrokSaKolicinom = new ObrokSaKolicinom(selectedMeal, quantity);&#10;&#10;        textViewCaloriesPreview.setText(String.format(&quot;Calories: %.1f kcal&quot;, obrokSaKolicinom.getCalculatedKcal()));&#10;        textViewProteinPreview.setText(String.format(&quot;Protein: %.1f g&quot;, obrokSaKolicinom.getCalculatedProtein()));&#10;        textViewCarbsPreview.setText(String.format(&quot;Carbohydrates: %.1f g&quot;, obrokSaKolicinom.getCalculatedCarb()));&#10;        textViewFatPreview.setText(String.format(&quot;Fat: %.1f g&quot;, obrokSaKolicinom.getCalculatedFat()));&#10;    }&#10;&#10;    private void addMealToDay() {&#10;        if (selectedMeal == null) {&#10;            Toast.makeText(this, &quot;Please select a meal&quot;, Toast.LENGTH_SHORT).show();&#10;            return;&#10;        }&#10;&#10;        float quantity;&#10;        try {&#10;            String quantityStr = editTextQuantity.getText().toString().trim();&#10;            if (quantityStr.isEmpty()) {&#10;                quantity = 1.0f;&#10;            } else {&#10;                quantity = Float.parseFloat(quantityStr);&#10;            }&#10;&#10;            if (quantity &lt;= 0) {&#10;                Toast.makeText(this, &quot;Quantity must be greater than 0&quot;, Toast.LENGTH_SHORT).show();&#10;                return;&#10;            }&#10;        } catch (NumberFormatException e) {&#10;            Toast.makeText(this, &quot;Please enter a valid quantity&quot;, Toast.LENGTH_SHORT).show();&#10;            return;&#10;        }&#10;&#10;        Obrok scaledObrok = new Obrok(&#10;                null,&#10;                selectedMeal.getIme() + &quot; (&quot; + (quantity * 100) + &quot;g)&quot;,&#10;                selectedMeal.getKcal() * quantity,&#10;                selectedMeal.getFat() * quantity,&#10;                selectedMeal.getCarb() * quantity,&#10;                selectedMeal.getProtein() * quantity&#10;        );&#10;&#10;        String selectedCategory = mealCategories[spinnerMealCategory.getSelectedItemPosition()];&#10;&#10;        addToTodaysMeals(scaledObrok, selectedCategory);&#10;&#10;        Toast.makeText(this, &quot;Meal added to &quot; + selectedCategory.toLowerCase() + &quot;!&quot;, Toast.LENGTH_SHORT).show();&#10;        finish();&#10;    }&#10;&#10;    private void addToTodaysMeals(Obrok obrok, String category) {&#10;        long obrokId = database.addObrok(obrok.getIme(), obrok.getKcal(), obrok.getFat(), obrok.getCarb(), obrok.getProtein());&#10;        obrok.setId(obrokId);&#10;&#10;        Date targetDate = new Date();&#10;        Intent intent = getIntent();&#10;        if (intent != null &amp;&amp; intent.hasExtra(&quot;SELECTED_DATE&quot;)) {&#10;            long dateMillis = intent.getLongExtra(&quot;SELECTED_DATE&quot;, System.currentTimeMillis());&#10;            targetDate = new Date(dateMillis);&#10;        }&#10;&#10;        ObrociDan obrociDan = database.getObrociDanByDate(targetDate);&#10;&#10;        if (obrociDan == null) {&#10;            List&lt;Obrok&gt; dorucak = new ArrayList&lt;&gt;();&#10;            List&lt;Obrok&gt; rucak = new ArrayList&lt;&gt;();&#10;            List&lt;Obrok&gt; vecera = new ArrayList&lt;&gt;();&#10;            List&lt;Obrok&gt; uzina = new ArrayList&lt;&gt;();&#10;&#10;            switch (category) {&#10;                case &quot;Breakfast&quot;:&#10;                    dorucak.add(obrok);&#10;                    break;&#10;                case &quot;Lunch&quot;:&#10;                    rucak.add(obrok);&#10;                    break;&#10;                case &quot;Dinner&quot;:&#10;                    vecera.add(obrok);&#10;                    break;&#10;                case &quot;Snacks&quot;:&#10;                    uzina.add(obrok);&#10;                    break;&#10;            }&#10;&#10;            database.addObrociDan(dorucak, rucak, vecera, uzina, targetDate);&#10;        } else {&#10;            List&lt;Obrok&gt; dorucak = obrociDan.getDorucak() != null ? new ArrayList&lt;&gt;(obrociDan.getDorucak()) : new ArrayList&lt;&gt;();&#10;            List&lt;Obrok&gt; rucak = obrociDan.getRucak() != null ? new ArrayList&lt;&gt;(obrociDan.getRucak()) : new ArrayList&lt;&gt;();&#10;            List&lt;Obrok&gt; vecera = obrociDan.getVecera() != null ? new ArrayList&lt;&gt;(obrociDan.getVecera()) : new ArrayList&lt;&gt;();&#10;            List&lt;Obrok&gt; uzina = obrociDan.getUzina() != null ? new ArrayList&lt;&gt;(obrociDan.getUzina()) : new ArrayList&lt;&gt;();&#10;&#10;            switch (category) {&#10;                case &quot;Breakfast&quot;:&#10;                    dorucak.add(obrok);&#10;                    break;&#10;                case &quot;Lunch&quot;:&#10;                    rucak.add(obrok);&#10;                    break;&#10;                case &quot;Dinner&quot;:&#10;                    vecera.add(obrok);&#10;                    break;&#10;                case &quot;Snacks&quot;:&#10;                    uzina.add(obrok);&#10;                    break;&#10;            }&#10;&#10;            database.editObrociDan(obrociDan.getId(), dorucak, rucak, vecera, uzina, targetDate);&#10;        }&#10;    }&#10;&#10;    @Override&#10;    protected void onResume() {&#10;        super.onResume();&#10;        loadMeals();&#10;    }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>